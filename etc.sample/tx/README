
General:
Senders read products a directory from a transmission queue (/apps/px/tx/<client>/*)
They send products out using a selected protocol.  Configuration files must end in 
.conf, all other files are ignored by px.  For example, to disable a client, the
convention is to stop the sender, rename the configuration file to .off and restart px.

 -- See examples in etc.sample/tx/

Client Directives (common to all types):

# 		Hash is used to start comment lines.

type <am|wmo|amis|single-file>  (keyword, default: single-file)
    am              - AM protocol socket
    wmo             - WMO protocol socket
    single-file     - Send plain files (like a PDS)

batch 10000   (integer, default: 100)
    The maximum number of files that will be read from disk between checks to the queuing 
    directories. Used with all type of clients.

emask <mask>    (exclude files matching this mask)
    the header2client.conf routing table chooses which products are queued for which clients.
    clients can override the routing table to suppress transmission by applying exclusion patterns. 

imask <mask>    (include files matching this mask)
    the header2client.conf routing table chooses which products are queued for which clients.
    clients can override the routing table to suppress transmission by applying exclusion patterns. 
    
destination <URL> 
    Uniform Resource Locator to designate where a sender should connect to.
    Only ONE destination directive by client.  indicates protocol to send.
    
    Examples:
        destination wmo://tandem.cmc.ec.gc.ca:5012
        destination am://localhost:5012
        destination amis://123.138.212.130:5012
        destination ftp://user:passwd@hostname//absolute/directory WHATFN
        destination ftp://user:passwd@hostname/relative/directory WHATFN


Options which apply only to single-file (FTP) senders:

    There are synonyms for subsets of 'destination'
    'protocol', 'host', 'user', 'password', 'directory', 'filename'

directory <dir>
    directory //absolute/directory
    directory /relative/directory

    if dir_pattern is set (see below), then the following substitutions are
    done (see WMO manual on the GTS for meanings) ${<field>}, where field is:
	T1, T2, A1, A2, ii, CCCC, YY, GG, Gg, BBB, RYYYY,
        RMM, RDD, RHH, RMN, RSS
 
example:

directory pub/bulletins/${RYYYY}${RMM}${RDD}/${T1}${T2}/${CCCC}/${RHH}


----------------------------------------
filename <destfn>
    filename WHATFN     (Destination name will be first part of original filename)
    filename HEADFN     (Destination name will be HEADER part of original filename)
    filename NONE       (Use the entire filename)
    filename TIME       (Timestamp appended)
    filename WHATFN:TIME

dir_mkdir (boolean, default: False)
	whether to make missing directories in a destination path.

dir_pattern (boolean, default: False)
	whether the destination specification is a pattern.

host atlas.cmc.ec.gc.ca  (hostname, default: localhost)
    Host with a ftp server. 

user toto  (string, default: None)
    User name on the ftp server of 'host'. 

passwd titi  (string, default: None)
    Password of the user titi on 'host'. 

chmod 755    (octal mode,  default: 666)
    If set to a value different than 0, umask 777 followed by a chmod of the
    value will be done. Ensure that the a process at the reception end won't be
    able to ingest the file before the transfert is finished. When 0 or not present,
    the file will be sent with a .tmp and renamed (without the .tmp) at the end of
    the transfert.

ftp_mode active (keyword,  default: passive)

        

=========================================================================================

Developer Options (not of much use to mere mortals):

debug (boolean, Default: False)
    If we want sections with debug code (and logging informations)
    to be executed.

validation (boolean, Default: True)
    Validate if the filename have the following form:
    SACN43_CWAO_012000_CYOJ_41613:ncp1:CWAO:SA:3.A.I.E::20050201200339
    The priority field and the timestamp field are checked for validity.

patternMatching (boolean, Default: True)
    Determine if the masks present in the client config. file will be used for
    routing the files present in the client's queue. 

noduplicates (boolean, default: True)   (applies to: socket senders)
    Senders compute checksums for bulletins sent, and place them in a send
    cache.  If the same message shows up again, it will be found in the cache.
    when noduplicates is true, senders will not send bulletins found.

sorter (keyword, default: MultiKeysStringSorter, others: None,StandardSorter)
    Determine which type of sorter will be used. Can be used with all client's types.
    MultiKeysStringSorter ensures delivery by priority and time.
    
mtime 5  (number, default: 0)
    Number of seconds a file must not have been modified before we
    read it. If set to 0, this is equivalent to not checking the
    modification time. This option is useful for files received
    by rcp, ftp, etc. Normally not used for clients because the files in 
    their queues have been put there by a source in an "atomic" operation.

