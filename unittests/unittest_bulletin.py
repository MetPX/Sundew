# -*- coding: iso-8859-1 -*-
#############################################################################################
# Name: unittest_bulletin.py
# Author: Jun Hu 
# Date: 2012-04-30
# Description: test cases for bulletin class
#############################################################################################
import sys,os,unittest
sys.path.insert(1, '../sundew/lib/')
os.environ['PXROOT']="."

from Logger import Logger
from bulletin import bulletin

class unittest_bulletin(unittest.TestCase):
   
  def setUp(self,logFile='log/bulletin.log'):
    self.logger = Logger(logFile, 'DEBUG', 'Sub')    
    self.logger = self.logger.getLogger()    
    f = file('etc/ISAA51_CWXS_211500___60968:ncp1deb-bufr:CWXS:IS:3:ncpdeb_bufr:20120821150803')     
    self.stringBulletin = f.read()
    f.close()
    self.oneBulletin = bulletin(self.stringBulletin,self.logger,lineSeparator='\n')
      

  def test_bulletin(self):  
    self.assertEqual(self.oneBulletin.getHeader(), 'ISAA51 CWXS 211500')
    self.assertEqual(self.oneBulletin.verifyHeader(), None)
    self.assertEqual(self.oneBulletin.splitlinesBulletin(self.stringBulletin),['ISAA51 CWXS 211500', "BUFR\x00\x02\xa8\x02\x00\x00\x12\x00\x006\x00\x00\x00\x00\x0b#\x0c\x08\x15\x0f\x00\x00\x00\x01\x90\x00\x00\x01\x80\x01\xcc\x01\x13<\x01\x06\x02\x05\x02\x07\x01\x04\x01\x04\x02\x04\x03\x04\x04\x04\x05\x01\x01\x01\x02\x01\xc3\x01\xc4\x02\xc4<\x05\x08\xc5<\x04\x08\xc5<\x02\x08\xc5<\x03\x08\xc5\x08\xc5\x14\x01\x08\xc5\n\x04\x08\xc5\n3\x08\xc5\x0c\x01\x04\x18\x08\xc5\x0c\x0c\x08\xc5\x0c\x0b\x04\x18\x08\xc5\x0c\x03\x08\x15\x04\x19\x08\xc5\x0b\x0b\x08\xc5\x0b\x0c\x04\x19\x08\x15\x04\x19\x07\x06\x08\xc5\x0b\n\x08\xc5\x0b/\x07\x06\x04\x19\x04\x19\x08\xc5\x0b\x0b\x08\xc5\x0b\x0c\x04\x19\x08\xc5\r\x15\x08\xc5\r\x13\x04\x18\x08\xc5\r\x0b\x04\x18\x04 \x08\x17\x08\xc5\x0c\x04\x04 \x08\x17\x08\xc5\x0c\xc7\x08\xc5\r\x03\x07\x06\x04 \x08\x17\x08\xc5\r\x08\x08\xc5\r\x07\x07\x06\x04 \x08\x17\x08\x15\x04\x18\x08\xc5\x0b\x0b\x08\xc5\x0b\x0c\x08\x15\x04\x18\x04\x18\x08\xc5\x0b1\x04\x18\x04\x18\x07\x06\x08\x17\x08\xc5\x0b\n\x08\x17\x08\x15\x08\xc5\x0b*\x08\x15\x07\x06\x04\x18\x04\x18\x07\x06\x08\xc5\x0b\n\x08\xc5\x0b.\x07\x06\x04\x18\x04\x19\x07\x06\x08\x17\x08\xc5\x0b\n\x08\x17\x07\x06\x04\x19\x04 \x08\x17\x04\x19\x08\xc5\r\xda\x04\x19\x08\xc5\r\xda\x04\x19\x08\xc5\r\xda\x04\x19\x08\xc5\r\xda\x04 \x08\x17\x04 \x04\x05\x04\x05\x08\xc5\r\x0b\x04\x05\x04\x05\x08\xc5\r\x0b\x04\x05\x04\x05\x08\xc5\r\x0b\x04\x05\x04\x05\x08\xc5\r\x0b\x04 \x07\x06\x04 \x08\x15\x04\x05\x04\x05\x08\xc5\x0b\x02\x04\x05\x04\x05\x08\xc5\x0b\x02\x04\x05\x04\x05\x08\xc5\x0b\x02\x04\x05\x04\x05\x08\xc5\x0b\x02\x07\x06\x04 \x08\x15\x04 \x08\x15\x08\xc5\x0e\xcf\x04 \x08\x15\x08\xc5\n?\x08\xc5\n=\xb1\x00\x00\xfa\x00WXS BAS CARAQUET                    \x02\xcb?Z\xea\x01\x95}\xc8U\xe0G\x95\x80\x00O\xff\x80?@\x83\x02\x04\x07-@'\x80\x04\xf0\xc0\xb7w\xff\x05\xb9\x82\xde\xff\xfc\x16\xb6'\xf6\x05D\x00#\xff\xff\x7f`\x01@\xad\x80\x06\xff\xff\xff\xfb\xff\x02\x98\x00\x0b\xff\xf0\x00\x0e\x00\x00_\xfc\x00\x00\xff\xff\x82\x02\xdd\xff\xfc\x16\x9a\n\x80\x00\xbc\x10\x15\xc1S\xff\xff\xff\x89\xff\xc1X\x00\x08\x7f\xff\xdf\xfc\x01\x9f\xff\x7f\xf0\x01P\x02\x81\xf8\x80\x02\xbf\xff\xff\xff\xef\xfe\x00(\x15\x00\x01\x07\xff\xff\xff\x7f\xe0\x00P\x02\xbd\xff\xff\xff\xff\x04G\xd3\x02~O\xc4\x04\xfc\x9f\xc4\t\xf9?\xf8\x13\xf2\xff\xf3\xc1<\x00\x00\xa0\xf0\x00\x01~\xd0\x00\x03w\x80\x00\x07\xf0\x00G\x88\x13\xc0\x00h<\x00\x02~\xd0\x00\x15\xde\x00\x00\xbf\xff\xff\xff\x06\tq\x88\xff\xe00?@\x007777", ''])

            
def suite():
  suite = unittest.TestSuite()
  suite.addTest(unittest.makeSuite(unittest_bulletin))
  return suite
    
if __name__ == '__main__':  
  suite = unittest.TestLoader().loadTestsFromTestCase(unittest_bulletin)
  unittest.TextTestRunner(verbosity=2).run(suite)
